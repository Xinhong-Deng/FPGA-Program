.text
.equ HEX_BASE1, 0xFF200020
.equ HEX_BASE2, 0xFF200030
.equ HEX_0, 0x0000003F
.equ HEX_1, 0x00000006
.equ HEX_2, 0x0000005B
.equ HEX_3, 0x0000004F
.equ HEX_4, 0x00000066
.equ HEX_5, 0x0000006D
.equ HEX_6, 0x0000007D
.equ HEX_7, 0x00000007
.equ HEX_8, 0x0000007F
.equ HEX_9, 0x0000006F
.equ HEX_A, 0x00000077
.equ HEX_B, 0x0000007C
.equ HEX_C, 0x00000039
.equ HEX_D, 0x0000005E
.equ HEX_E, 0x00000079
.equ HEX_F, 0x00000071

.global HEX_clear_ASM, HEX_flood_ASM, HEX_write_ASM
HEX_clear_ASM:
LDR R1, =HEX_BASE1		//0-3 HEX DISPLAY
LDR R2, =HEX_BASE2		//4-5 HEX DISPLAY
LDR R6, [R1]			//LOAD STATE OF 0-3 HEX DISPLAY
LDR R7, [R2]			//LOAD STATE OF 4-5 HEX DISPLAY

AND R5, R0, #1			//CHECK THE Bit0
MOV R3, #0xFFFFFF00		//OFF
CMP R5, #1				//CHECK WHETHER THE BIT NEEDS TO BE OPERATED
ANDEQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1			//FINISH MODIFICATION OF ONE DISPLAY

AND R5, R0, #1			//CHECK THE BIT1
MOV R3, #0xFFFF00FF
CMP R5, #1
ANDEQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE BIT2
MOV R3, #0xFF00FFFF
CMP R5, #1
ANDEQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE BIT3
MOV R3, #0x00FFFFFF
CMP R5, #1
ANDEQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE Bit4
MOV R3, #0xFFFFFF00		//OFF
CMP R5, #1				//CHECK WHETHER THE BIT NEEDS TO BE OPERATED
ANDEQ R7, R7, R3		//APPLY THE MASK
LSR R0, R0, #1			//FINISH MODIFICATION OF ONE DISPLAY

AND R5, R0, #1			//CHECK THE BIT5
MOV R3, #0xFFFF00FF
CMP R5, #1
ANDEQ R7, R7, R3		//APPLY THE MASK

STR R6, [R1]
STR R7, [R2]

BX LR
HEX_flood_ASM:
LDR R1, =HEX_BASE1		//0-3 HEX DISPLAY
LDR R2, =HEX_BASE2		//4-5 HEX DISPLAY
LDR R6, [R1]			//LOAD STATE OF 0-3 HEX DISPLAY
LDR R7, [R2]			//LOAD STATE OF 4-5 HEX DISPLAY

AND R5, R0, #1			//CHECK THE Bit0
MOV R3, #0x000000FF		//OFF
CMP R5, #1				//CHECK WHETHER THE BIT NEEDS TO BE OPERATED
ORREQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1			//FINISH MODIFICATION OF ONE DISPLAY

AND R5, R0, #1			//CHECK THE BIT1
MOV R3, #0x0000FF00
CMP R5, #1
ORREQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE BIT2
MOV R3, #0x00FF0000
CMP R5, #1
ORREQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE BIT3
MOV R3, #0xFF000000
CMP R5, #1
ORREQ R6, R6, R3		//APPLY THE MASK
LSR R0, R0, #1

AND R5, R0, #1			//CHECK THE Bit4
MOV R3, #0x000000FF	//OFF
CMP R5, #1				//CHECK WHETHER THE BIT NEEDS TO BE OPERATED
ORREQ R7, R7, R3		//APPLY THE MASK
LSR R0, R0, #1			//FINISH MODIFICATION OF ONE DISPLAY

AND R5, R0, #1			//CHECK THE BIT5
MOV R3, #0x0000FF00
CMP R5, #1
ORREQ R7, R7, R3		//APPLY THE MASK

STR R6, [R1]
STR R7, [R2]

BX LR
HEX_write_ASM:
CMP R1,#48
MOVEQ R4, #HEX_0
BEQ WRITE
CMP R1,#49
MOVEQ R4, #HEX_1
BEQ WRITE
CMP R1,#50
MOVEQ R4, #HEX_2
BEQ WRITE
CMP R1,#51
MOVEQ R4, #HEX_3
BEQ WRITE
CMP R1,#52
MOVEQ R4, #HEX_4
BEQ WRITE
CMP R1,#53
MOVEQ R4, #HEX_5
BEQ WRITE
CMP R1,#54
MOVEQ R4, #HEX_6
BEQ WRITE
CMP R1,#55
MOVEQ R4, #HEX_7
BEQ WRITE
CMP R1,#56
MOVEQ R4, #HEX_8
BEQ WRITE
CMP R1,#57
MOVEQ R4, #HEX_9
BEQ WRITE
CMP R1,#65
MOVEQ R4, #HEX_A
BEQ WRITE
CMP R1,#66
MOVEQ R4, #HEX_B
BEQ WRITE
CMP R1,#67
MOVEQ R4, #HEX_C
BEQ WRITE
CMP R1,#68
MOVEQ R4, #HEX_D
BEQ WRITE
CMP R1,#69
MOVEQ R4, #HEX_E
BEQ WRITE
CMP R1,#70
MOVEQ R4, #HEX_F
BEQ WRITE
WRITE:

LDR R2, =HEX_BASE1		//0-3 HEX DISPLAY
LDR R3, =HEX_BASE2		//4-5 HEX DISPLAY
LDR R5, [R2]			//LOAD STATE OF 0-3 HEX DISPLAY
LDR R6, [R3]			//LOAD STATE OF 4-5 HEX DISPLAY

CMP R0, #0x00000001
MOVEQ R7, #0xFFFFFF00		//OFF
ANDEQ R7, R7, R5		//APPLY THE MASK
ORREQ R7, R7, R4
STREQ R7, [R2]

CMP R0, #0x00000002
MOVEQ R7, #0xFFFF00FF		//OFF
LSLEQ R4, #8
ANDEQ R7, R7, R5		//APPLY THE MASK
ORREQ R7, R7, R4
STREQ R7, [R2]

CMP R0, #0x00000004
MOVEQ R7, #0xFF00FFFF		//OFF
LSLEQ R4, #16
ANDEQ R7, R7, R5		//APPLY THE MASK
ORREQ R7, R7, R4
STREQ R7, [R2]

CMP R0, #0x00000008
MOVEQ R7, #0x00FFFFFF		//OFF
LSLEQ R4, #24
ANDEQ R7, R7, R5		//APPLY THE MASK
ORREQ R7, R7, R4
STREQ R7, [R2]

CMP R0, #0x00000010
MOVEQ R8, #0xFFFFFF00		//OFF
ANDEQ R8, R8, R6		//APPLY THE MASK
ORREQ R8, R8, R4
STREQ R8, [R3]

CMP R0, #0x00000020
MOVEQ R7, #0xFFFF00FF		//OFF
LSLEQ R4, #8
ANDEQ R8, R8, R6		//APPLY THE MASK
ORREQ R8, R8, R4
STREQ R8, [R3]


BX LR

.end
